<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>16d6a22d-7691-4a2e-bbcb-8a81c9c5d4e6</groupId>
	<!-- Group ID should point to business org ID. For common apps, it should be Titan’s business org ID.
			The above provided is Titan’s business org -->
	<artifactId>digigold-order-papi-app</artifactId>
	<!-- Artifact ID should always have app appended in the end.
	Ex: If the API name is oauth-sfcc-sapi, then artifactId should be oauth-sfcc-sapi-app -->
	<version>1.0.40</version>

	<packaging>mule-application</packaging>
	<name>digigold-order-papi</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<app.runtime>4.4.0</app.runtime>
		<mule.maven.plugin.version>3.8.1</mule.maven.plugin.version>
		<munit.version>2.3.12</munit.version>
		<http.version>1.7.3</http.version>
		<socket.version>1.2.2</socket.version>
		<secure.config.module.version>1.2.5</secure.config.module.version>
		<json.logger.version>2.1.0</json.logger.version>
		<apps.commons.version>1.0.0</apps.commons.version>
		<api.kit.version>1.6.1</api.kit.version>

		<!-- Cloudhub 2.0 default properties to be added -->
		<ap.uri>https://anypoint.mulesoft.com</ap.uri>
		<!-- master\subOrg1\subOrg2 -->
		<ap.businessGroup/>
		<!-- requires AP environments to have the same name as the env property value in Mule apps (which determines the property files to load) -->
		<ap.environment>Set with -Dap.environment=...</ap.environment>
		<!-- for automated deployments to CH -->
		<!-- Cloudhub-US-East-1, Cloudhub-US-East-2, ... -->
		<ch.space>Cloudhub-US-East-1</ch.space>
		<ch.replicas>1</ch.replicas>
		<!-- 0.1,0.5, ... -->
		<ch.vCores>0.1</ch.vCores>
		<!-- for API autodiscovery -->
		<ap.client_id>{{Organisation Client ID}}</ap.client_id>
		<ap.client_secret>{{Organisation Client Secret}}</ap.client_secret>
		<!-- for Connected app deployment -->
		<ap.ca.server>cloudhubConnectedApp</ap.ca.server>
		<!-- set encrypt.key for decrypting secure (encryped) properties files (but don't set it here!) -->

		<ap.lastmilesecurity>false</ap.lastmilesecurity>
		<ap.objectstore.enabled>false</ap.objectstore.enabled>
		<ap.forwardSslSession>false</ap.forwardSslSession>
		<ap.generateDefaultPublicUrl>false</ap.generateDefaultPublicUrl>
		<deployment.name>${project.name}</deployment.name>
		<deployment.timeoutMillis>1000000</deployment.timeoutMillis>
		<api.layer>{{Set API Layer}}</api.layer>
		<ap.clusteredFlag>false</ap.clusteredFlag>

	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<groupId>org.mule.tools.maven</groupId>
				<artifactId>mule-maven-plugin</artifactId>
				<version>${mule.maven.plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<classifier>mule-application</classifier>
					<!--  Cloudhub Deployment - Plugin -->
					<cloudhub2Deployment>

						<businessGroupId>${ap.businessGroup}</businessGroupId>
						<environment>${ap.environment}</environment>
						<target>${ch.space}</target>
						<muleVersion>${app.runtime}</muleVersion>
						<provider>MC</provider>
						<replicas>${ch.replicas}</replicas>
						<vCores>${ch.vCores}</vCores>
						<applicationName>${deployment.name}</applicationName>
						<deploymentTimeout>${deployment.timeoutMillis}</deploymentTimeout>
						<server>${ap.ca.server}</server>
						<properties>
							<anypoint.platform.config.analytics.agent.enabled>true</anypoint.platform.config.analytics.agent.enabled>
							<anypoint.platform.visualizer.displayName>${project.name}</anypoint.platform.visualizer.displayName>
							<!-- api.layer must be set in every concrete Mule app! -->

							<anypoint.platform.visualizer.layer>${api.layer}</anypoint.platform.visualizer.layer>
							<env>${deployment.env}</env>
							<!-- Not supported as secure -->

							<anypoint.platform.client_id>${ap.client_id}</anypoint.platform.client_id>
							<anypoint.platform.client_secret>${ap.client_secret}</anypoint.platform.client_secret>

							<log.s3.frequency>${log.s3.frequency}</log.s3.frequency>
							<log.s3.aws.region>${log.s3.aws.region}</log.s3.aws.region>
							<log.s3.bucket>${log.s3.bucket}</log.s3.bucket>
							<log.s3.compress>${log.s3.compress}</log.s3.compress>
							<log.s3.storageClass>${log.s3.storageClass}</log.s3.storageClass>
							<log.s3.aws.accessKey>${log.s3.aws.accessKey}</log.s3.aws.accessKey>
							<log.s3.aws.secureKey>${log.s3.aws.secureKey}</log.s3.aws.secureKey>
							<deployment.name>${deployment.name}</deployment.name>
							<!-- concrete Mule apps can provide their own props which will be merged with the props given here -->
						</properties>
						<secureProperties>
							<secure.key.titan>${encrypt.key}</secure.key.titan>
							<!-- Any additional secure properties must be added here -->
						</secureProperties>
						<deploymentSettings>
							<clustered>${ap.clusteredFlag}</clustered>
							<generateDefaultPublicUrl>${ap.generateDefaultPublicUrl}</generateDefaultPublicUrl>
							<http>
								<inbound>
									<publicUrl>${ap.publicUrl}</publicUrl>
									<lastMileSecurity>${ap.lastmilesecurity}</lastMileSecurity>
									<forwardSslSession>${ap.forwardSslSession}</forwardSslSession>
								</inbound>
							</http>
						</deploymentSettings>
						<integrations>
							<services>
								<objectStoreV2>
									<enabled>${ap.objectstore.enabled}</enabled>
								</objectStoreV2>
							</services>
						</integrations>
					</cloudhub2Deployment>

				</configuration>

			</plugin>
			<plugin>
				<groupId>com.mulesoft.munit.tools</groupId>
				<artifactId>munit-maven-plugin</artifactId>
				<version>${munit.version}</version>
				<executions>
					<execution>
						<id>test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
							<goal>coverage-report</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--  					<skipMunitTests>true</skipMunitTests>-->
					<coverage>
						<runCoverage>true</runCoverage>
						<formats>
							<format>html</format>
						</formats>
					</coverage>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.mule.connectors</groupId>
			<artifactId>mule-http-connector</artifactId>
			<version>${http.version}</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>org.mule.connectors</groupId>
			<artifactId>mule-sockets-connector</artifactId>
			<version>${socket.version}</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>com.mulesoft.modules</groupId>
			<artifactId>mule-secure-configuration-property-module</artifactId>
			<version>${secure.config.module.version}</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-apikit-module</artifactId>
			<version>${api.kit.version}</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>com.mulesoft.munit</groupId>
			<artifactId>munit-runner</artifactId>
			<version>${munit.version}</version>
			<classifier>mule-plugin</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.mulesoft.munit</groupId>
			<artifactId>munit-tools</artifactId>
			<version>${munit.version}</version>
			<classifier>mule-plugin</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.weave</groupId>
			<artifactId>assertions</artifactId>
			<version>1.0.2</version>
			<scope>test</scope>
		</dependency>
		<!-- JSON Logger Dependency -->
		<dependency>
			<groupId>c3cf65b1-e732-48c6-b48e-b22effe859fa</groupId>
			<artifactId>json-logger</artifactId>
			<version>${json.logger.version}</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<!-- Apps Common Dependency -->
		<dependency>
			<groupId>c3cf65b1-e732-48c6-b48e-b22effe859fa</groupId>
			<artifactId>apps-commons</artifactId>
			<version>${apps.commons.version}</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>org.mule.connectors</groupId>
			<artifactId>mule-sftp-connector</artifactId>
			<version>1.6.1</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>com.mulesoft.connectors</groupId>
			<artifactId>mule-amazon-dynamodb-connector</artifactId>
			<version>1.5.0</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>com.mulesoft.modules</groupId>
			<artifactId>mule-cryptography-module</artifactId>
			<version>1.3.14</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>org.mule.connectors</groupId>
			<artifactId>mule-objectstore-connector</artifactId>
			<version>1.2.1</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>org.mule.connectors</groupId>
			<artifactId>mule-vm-connector</artifactId>
			<version>2.0.0</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>16d6a22d-7691-4a2e-bbcb-8a81c9c5d4e6</groupId>
			<artifactId>digigold-order-papi</artifactId>
			<version>1.0.8</version>
			<classifier>raml</classifier>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>c3cf65b1-e732-48c6-b48e-b22effe859fa</groupId>
			<artifactId>appender-log4j2</artifactId>
			<version>1.0.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.amazonaws</groupId>
					<artifactId>aws-java-sdk-s3</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.microsoft.azure</groupId>
					<artifactId>azure-storage</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.solr</groupId>
					<artifactId>solr-solrj</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.elasticsearch.client</groupId>
					<artifactId>elasticsearch-rest-high-level-client</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>1.12.261</version>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-validation-module</artifactId>
			<version>2.0.2</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-compression-module</artifactId>
			<version>2.2.1</version>
			<classifier>mule-plugin</classifier>
		</dependency>
		<dependency>
			<groupId>com.mulesoft.connectors</groupId>
			<artifactId>mule-amazon-s3-connector</artifactId>
			<version>6.1.1</version>
			<classifier>mule-plugin</classifier>
		</dependency>
	</dependencies>
	<distributionManagement>
		<repository>
			<id>anypoint-exchange-v3</id>
			<name>Corporate Repository</name>
			<url>https://maven.anypoint.mulesoft.com/api/v3/organizations/${project.groupId}/maven</url>
			<!-- Org ID should point to business org ID. For common apps, it should be Titan’s business org ID.
			The above provided is Titan’s business org -->
			<layout>default</layout>
		</repository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>mulesoft-releases</id>
			<name>MuleSoft Releases Repository</name>
			<url>https://repository.mulesoft.org/releases/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>anypoint-exchange-v3</id>
			<name>Anypoint Exchange V3</name>
			<url>https://maven.anypoint.mulesoft.com/api/v3/maven</url>
			<layout>default</layout>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>mulesoft-releases</id>
			<name>mulesoft release repository</name>
			<layout>default</layout>
			<url>https://repository.mulesoft.org/releases/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
</project>
