<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns:sfcc-order-sapi="http://www.mulesoft.org/schema/mule/sfcc-order-sapi"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sfcc-order-sapi http://www.mulesoft.org/schema/mule/sfcc-order-sapi/current/mule-sfcc-order-sapi.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
	<flow name="process-sfcc-order-sapi-customer-info" doc:id="56964793-afeb-4c79-a877-c311ac2ecd5a" >
		<ee:transform doc:name="Filter distinct MemberId's" doc:id="0ced4100-d20e-4854-80ab-47b9af2d13e6" >
			<ee:message >
				<ee:set-payload ><![CDATA[payload]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="jsonErrorMessage" ><![CDATA[%dw 2.0
output application/java
---
"Error while connecting to SFCC Order SAPI for customer search"]]></ee:set-variable>
				<ee:set-variable variableName="customerSearchResponse" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="Memberids" ><![CDATA[%dw 2.0
output application/java
---
payload.items.*MEMBER_ID distinctBy ((item, index) -> item)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<json-logger:logger doc:name="Logger" doc:id="1c04e86f-8627-4467-86dc-0643676f9836" config-ref="JSON_Logger_Config" message="Distinct MemberID's for the transactions" tracePoint="BEFORE_TRANSFORM" category="${log.category}" priority="DEBUG">
			<json-logger:content><![CDATA[#[import modules::JSONLoggerModule 
output application/json 
---
{
	    headers:  
    	{
			reportType: payload.reportType,
			reportName: payload.reportName,
			variables: payload.variables,
	        dynamodbFetchCount: payload.dynamodbFetchCount,
			batchCount: payload.batchCount,
			count: payload.count,
	        lastEvaluatedKey: payload.lastEvaluatedKey
	      },
    	MemberIDS: JSONLoggerModule::stringifyNonJSON(vars.Memberids) 
}]]]></json-logger:content>
		</json-logger:logger>
		<foreach doc:name="For Each" doc:id="c6713c05-f9ad-4880-b8b6-8ab3be46c486" collection="#[vars.Memberids]" batchSize="${sfcc-order-sapi.batchSize}">
			<ee:transform doc:name="Prepare Request for Customer Search" doc:id="e90485b2-9be9-489c-afa7-3b9c9aaae5c0">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="customerSearchRequest"><![CDATA[%dw 2.0
output application/json
---
{
  "query": {
    "bool_query": {
      "must": [
        {
          "term_query": {
            "fields": [
              "customer_no"
            ],
            "operator": "one_of",
            "values": 
              payload
          }
        }
      ]
    }
  },
  "select": "(**)",
  "sorts": [
    {
      "field": "last_modified",
      "sort_order": "desc"
    }
  ]
}]]></ee:set-variable>
					<ee:set-variable variableName="customerSearchPath" ><![CDATA[%dw 2.0
import p from Mule
output application/java
---
p('sfcc-order-sapi.endpoints.post.customerSearchPath')]]></ee:set-variable>
					<ee:set-variable variableName="notificationMethod" ><![CDATA[%dw 2.0
import p from Mule
output application/java
---
p('sfcc-order-sapi.endpoints.post.notificationMethod')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
			<flow-ref doc:name='call-to-sfcc-order-sapi' doc:id="cf7cd502-5aba-4cf1-8f2d-5d15a2b6f7ec" name="call-to-sfcc-order-sapi" />
			<choice doc:name="Choice" doc:id="422ce4a7-be4a-4a9f-81dd-ba0fbe769a1b" >
				<when expression="#[attributes.statusCode == 200]">
					<ee:transform doc:name="Map required fields from Customer Search" doc:id="3c2e83ad-2f20-45ae-824a-d703069311c4">
			<ee:message>
			</ee:message>
			<ee:variables>
							<ee:set-variable variableName="customerSearchResponse"><![CDATA[%dw 2.0
output application/json
---
vars.customerSearchResponse ++ ((payload.Customers map ((item, index) -> 
       {
       "CUSTOMER_NO": item.data.customer_no,
       "SAFEGOLD_USERID": item.data.c_safeGoldUserID,
       "EMAIL": item.data.email,
       "MOBILEPHONE": item.data.phone_mobile,
       "REGISTRATION_DATE": item.data.c_safeGoldRegistrationDate
       }
)) filter($."CUSTOMER_NO" != null))]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				</when>
				<!--  <when expression="#[payload.errorCode contains 'SAPI']">
					<ee:transform doc:name="Failure response body incase of any error post SFCC Order SAPI call" doc:id="66853e8a-bdee-4c93-9863-ebe7fbf6d2ae">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json 
-&#45;&#45;
payload]]></ee:set-payload>
						</ee:message>
						<ee:variables>
						</ee:variables>
					</ee:transform>
					<raise-error doc:name="CUSTOM:CUSTOMER_SEARCH_ERROR" doc:id="b3dfb946-4ea2-4cfa-950c-4c860dd7f10f" type="CUSTOM:CUSTOMER_SEARCH_ERROR" description='#[write(payload,"application/json")]' />
				</when>
				-->
				<otherwise>
					<ee:transform doc:name="Failure response body incase of any error in SFCC Order SAPI call" doc:id="6f521425-b79b-4a1c-ad15-392041a8cf6c">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
"reportType": vars.reportType default " "
}
++ payload

/* 
{
	transactionId: vars.correlationId,
	errorCode: vars.errorDetails.errorType,
	errorMessage: vars.errorDetails.errorDescription,
	errorDescription: vars.errorDetails.errorDetailedDescription,
	timestamp: now()>>'IST' as String {format: "yyyy-MM-dd HH:mm:ss.SSS"}
}*/]]></ee:set-payload>
						</ee:message>
						<ee:variables>
							<ee:set-variable variableName="httpStatus" ><![CDATA[500]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<raise-error doc:name="CUSTOM:CUSTOMER_SEARCH_ERROR" doc:id="aa1bfa6d-f8c9-43e7-8fee-11f62898a374" type="CUSTOM:CUSTOMER_SEARCH_ERROR" description='#[write(payload,"application/json")]' />
				</otherwise>
			</choice>
		</foreach>
	</flow>
</mule>
