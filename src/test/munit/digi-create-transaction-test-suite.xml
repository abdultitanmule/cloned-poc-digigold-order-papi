<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="api-test-suite.xml" />
	<munit:test name="digi-create-transaction-test-suite-successful" doc:id="e3e36820-f33e-483b-abcd-64758ee73663" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="9e4024cc-7c89-4259-af95-e8ed18e82392" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="httpRequestToDynamoOrderSapi" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="dynamoOrderSapiRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[MunitTools::getResourceAsString("test-outputs/create-transactions-success-response1.json")]' mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[{&#10;	statusCode: 200 as Number&#10;}]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="d237a55c-8cba-44ca-aab6-91c8c8c92c1f" >
				<munit:payload value='#[MunitTools::getResourceAsString("test-inputs/create-transactions-request.json")]' encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value='#[MunitTools::getResourceAsString("test-inputs/create-transactions-request-headers.json")]' encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="post:\transactions:application\json:digigold-order-papi-config" doc:id="a0815b72-9b53-4ea3-84b0-85109f1938ec" name="post:\transactions:application\json:digigold-order-papi-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="648d3fd6-9ac8-4ea3-981b-31289c9042ac" actual="#[payload.transactionStatus]" expected='#["Created"]'/>
		</munit:validation>
	</munit:test>
	
	
	<munit:test name="digi-create-transaction-test-suite-successful-negative" doc:id="42ec6a99-ef87-4dba-b22c-cb1ddbf32907">
	<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="bd638e46-504e-461f-a7af-4aefe6d8265e" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="httpRequestToDynamoOrderSapi" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="dynamoOrderSapiRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[MunitTools::getResourceAsString("test-outputs/create-transactions-success-response2.json")]' mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[{&#10;	statusCode: 200 as Number&#10;}]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="bdb401d1-56ab-41fe-b485-1b0e67fcdd17" >
				<munit:payload value='#[MunitTools::getResourceAsString("test-inputs/create-transactions-request.json")]' encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value='#[MunitTools::getResourceAsString("test-inputs/create-transactions-request-headers.json")]' encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="post:\transactions:application\json:digigold-order-papi-config" doc:id="ea0a2355-bc4c-4045-8248-d12e5559562d" name="post:\transactions:application\json:digigold-order-papi-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="7ecdedbc-f12a-4eb3-81b9-b2bcac545051" actual="#[payload.errorCode]" expected='#["DIGORDCRESAPI01"]'/>
		</munit:validation>
	</munit:test>
	
	
	<munit:test name="digi-create-transaction-test-connectivity-error" doc:id="30946018-7b25-4a29-a685-53015765c8cb">
	<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="b27d0748-3ff8-48db-9cc0-0ad37475a42b" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="httpRequestToDynamoOrderSapi" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="dynamoOrderSapiRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="d1f8b52d-3d59-4fe3-ba42-72bfa36b739c" >
				<munit:payload value='#[MunitTools::getResourceAsString("test-inputs/create-transactions-request.json")]' encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value='#[MunitTools::getResourceAsString("test-inputs/create-transactions-request-headers.json")]' encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="post:\transactions:application\json:digigold-order-papi-config" doc:id="ee7ce87e-8adf-4223-b8a2-c7ea649a4d66" name="post:\transactions:application\json:digigold-order-papi-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="14bf6fa3-39fa-4dd4-926e-931c46149b1f" actual="#[payload.errorCode]" expected='#["DIGORDCREPAPI01"]'/>
		</munit:validation>
		</munit:test>

</mule>
