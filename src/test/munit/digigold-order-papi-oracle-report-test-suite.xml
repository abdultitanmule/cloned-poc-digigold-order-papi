<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="digigold-order-papi-test-suite.xml" />
	<munit:test name="digigold-order-papi-test-suite-post:\reports:application\json:digigold-order-papi-success-test-case" doc:id="a67ad211-7893-4b07-9f19-ae1f9fb32511" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock apikit router" doc:id="f0c59355-d2e5-426e-9dd4-69d9218c6e04" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="digigold-order-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-call flow="post:\reports:application\json:digigold-order-papi-config" />
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when DynamoDBFetch" doc:id="7cc1d79e-9510-4abc-a372-8213f019cc55" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="httpRequestToDynamoOrderSapi" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="dynamoSAPIRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json --- readUrl("classpath://input/dynamo-sapi-success-response.json")]' mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value='#[{"statusCode" : 200}]' mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock call to VM" doc:id="e6c5a525-4cdb-47b7-a8af-25396e2894d4" processor="vm:publish">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Publish Dynamo  Response" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="oracleExtractQueue" attributeName="queueName" />
					<munit-tools:with-attribute whereValue="transactions_vm_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json --- readUrl("classpath://input/dynamo-sapi-success-response.json")]' mediaType="application/json" />
				</munit-tools:then-return>
				<munit-tools:then-call flow="listen-dynamo-response" />
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock call to sftp-sapi" doc:id="f2c1e8b5-a8fa-4bdf-930d-c020dff5e5fa" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Request" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="sftpSAPIRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json --- readUrl("classpath://input/sftp-sapi-success-response.json")]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock call to notification-sapi" doc:id="14f1a651-aae7-48b9-a33f-a78d0164786b" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Trigger notification SAPI" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="notificationSAPIRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="d38ad594-7285-4285-906e-0fc0b05c9182" >
				<munit:payload value="#[MunitTools::getResourceAsString('input/oracle-report-post-request.json')]" mediaType="application/json" />
				<munit:attributes value="#[MunitTools::getResourceAsString('input/oracle-report-type-attribute.json')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\reports:application\json:digigold-order-papi-config" doc:id="b14f94e6-2eae-4816-9187-2368cb3f4654" name="post:\reports:application\json:digigold-order-papi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call to Report generation transfom" doc:id="174508fc-c244-4223-b539-39a2efe44cf7" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Pipe delimited data for report" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	
	<munit:test name="digigold-order-papi-test-suite-post:\reports:application\json:digigold-order-papi-zero-records-failure-test-case" doc:id="41efba54-e3b9-4a1d-92a9-c5723c0b4645" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock apikit router" doc:id="ea245e1c-9cb7-4a37-9141-14913c56463e" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="digigold-order-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-call flow="post:\reports:application\json:digigold-order-papi-config" />
			</munit-tools:mock-when>
<munit-tools:mock-when doc:name="Mock to Dynamo-sapi" doc:id="0d048d80-770e-43fd-90cb-8547185f3909" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="httpRequestToDynamoOrderSapi" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="dynamoSAPIRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json --- readUrl("classpath://input/dynamo-sapi-zero-records-success-response.json")]' mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value='#[{"statusCode" : 200}]' mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock call to VM" doc:id="a0e35e83-93b5-44c7-a987-c339fe57be41" processor="vm:publish">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Publish Dynamo  Response" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="oracleExtractQueue" attributeName="queueName" />
					<munit-tools:with-attribute whereValue="transactions_vm_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json --- readUrl("classpath://input/dynamo-sapi-zero-records-success-response.json")]' mediaType="application/json" />
				</munit-tools:then-return>
				<munit-tools:then-call flow="listen-dynamo-response" />
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock call to notification-sapi" doc:id="5002e29a-b1ed-4665-9a9a-6535066fc226" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Trigger notification SAPI" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="notificationSAPIRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="c6ca76ea-86fa-407d-bfba-d930d98a394f" >
				<munit:payload value="#[MunitTools::getResourceAsString('input/oracle-report-post-request.json')]" mediaType="application/json" />
				<munit:attributes value="#[MunitTools::getResourceAsString('input/oracle-report-type-attribute.json')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\reports:application\json:digigold-order-papi-config" doc:id="0768e44f-2e00-49fb-80da-d69220c57bfd" name="post:\reports:application\json:digigold-order-papi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call to Report generation transfom" doc:id="3bf64853-0bd2-49af-bee7-38695239e325" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set notification params" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="digigold-order-papi-test-suite-post:\reports:application\json:digigold-order-papi-sapiConnectivity-failure-test-case" doc:id="0800fd74-d609-498b-8fe3-c0bdbc36fe84" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock apikit router" doc:id="a92f3519-236e-4941-b354-d038c4937c74" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="digigold-order-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-call flow="post:\reports:application\json:digigold-order-papi-config" />
			</munit-tools:mock-when>
<munit-tools:mock-when doc:name="Mock to Dynamo-sapi" doc:id="1830d98e-75dc-4caf-b78c-f1dec5b8ed6a" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="httpRequestToDynamoOrderSapi" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="dynamoSAPIRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:CONNECTIVITY" />
					<munit-tools:variables >
						<munit-tools:variable key="errorDetails" value='#[output application/json --- readUrl("classpath://input/mock-dynamo-sapi-error.json")]' mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock call to notification-sapi" doc:id="e14ef3c8-00f2-4ba4-89e3-bbf512e90aa1" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Trigger notification SAPI" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="notificationSAPIRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="8e0600dd-f523-4d58-b69b-1c13beeb0451" >
				<munit:payload value="#[MunitTools::getResourceAsString('input/oracle-report-post-request.json')]" mediaType="application/json" />
				<munit:attributes value="#[MunitTools::getResourceAsString('input/oracle-report-type-attribute.json')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\reports:application\json:digigold-order-papi-config" doc:id="814dc093-68e7-476f-8add-30633d4c842d" name="post:\reports:application\json:digigold-order-papi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call to on error continue Scenario" doc:id="476d9e64-45d3-42e7-bfab-42e9278a1928" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="set email params" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify call to error-handler" doc:id="da277f34-4934-4073-90b2-8b71276c972e" processor="ee:transform" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Prepare Error Message" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="f8292c02-6ae1-40a9-abf4-76978c12bc4a" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="digigold-order-papi-test-suite-post:\reports:application\json:digigold-order-papi-sapiANY-failure-test-case" doc:id="6efccaa4-6a30-40f7-9ebd-62aa939f695c" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock apikit router" doc:id="4de6a43f-6f69-4207-9495-f9aaf50f7987" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="digigold-order-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-call flow="post:\reports:application\json:digigold-order-papi-config" />
			</munit-tools:mock-when>
<munit-tools:mock-when doc:name="Mock to Dynamo-sapi" doc:id="b729888b-73e7-4cb0-93d9-b66a2b581ae7" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="httpRequestToDynamoOrderSapi" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="dynamoSAPIRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json --- readUrl("classpath://input/mock-dynamo-sapi-error.json")]' mediaType="application/json" encoding="UTF-8" />
					<munit-tools:error typeId="ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock call to notification-sapi" doc:id="a8c9bc9c-c80a-47ca-be0a-71f3836826bd" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Trigger notification SAPI" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="notificationSAPIRequestConfig" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="1e28e254-8987-4195-8110-29564394b3e2" >
				<munit:payload value="#[MunitTools::getResourceAsString('input/oracle-report-post-request.json')]" mediaType="application/json" />
				<munit:attributes value="#[MunitTools::getResourceAsString('input/oracle-report-type-attribute.json')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\reports:application\json:digigold-order-papi-config" doc:id="ff673e2a-1c1a-4d6b-94c3-deef4d49b28d" name="post:\reports:application\json:digigold-order-papi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call to on error continue Scenario" doc:id="548ef18f-f25d-4155-9f9a-33c3d2268efb" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="set email params" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
				<munit-tools:verify-call doc:name="Verify call to error-handler" doc:id="ab3ad34e-af59-41be-b7e0-de8fbd661c75" processor="ee:transform" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Prepare Error Message" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="e31764ec-0e7c-408c-97d6-9c5413794b59" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>

</mule>
